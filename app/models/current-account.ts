export interface CurrentAccountBag {
    id?: number;
    cif?: string;
    suggestion?: number;
    selection?: number;
    primary?: number;
    placeOfBirth?: string;
    idDateOfIssue?: string;
    dateOfBirth?:string;
    idPlaceOfIssue?: string;
    occupation?: string;
    permanentAddressLine1?: string;
    permanentAddressLine2?: string;
    permanentAddressLine3?: string;
    permanentAddressLine4?: string;
    permanentCity?: string;
    permanentState?: string;
    permanentZipCode?: string;
    permanentCountry?:string;
    currentAddressLine1?: string;
    currentAddressLine2?: string;
    currentAddressLine3?: string;
    currentAddressLine4?: string;
    currentCity?: string;
    currentState?: string;
    currentZipCode?: string;
    currentCountry?: string;
    creator?: string;
    created?: string;
    updator?: string;
    updated?: string;
    idType?:string;
    nationalId?: string;
    accountType?:string;
    accountSummery?:string;
    notes?:string;
    tempAccountNr?:string;
    note?:string;
    productType?:string;
    maritalStatus?: string;
    position?:string;
    branch?:string;
    nationality?:string;
    username?:string;
    purpose?:string;
    additional_account?:string;
    applicationRefNr?:string;
    

}

export class CurrentAccount implements CurrentAccountBag {
    id: number;
    cif: string;
    suggestion: number;
    selection: number;
    primary: number;
    placeOfBirth: string;
    idDateOfIssue: string;
    dateOfBirth:string;
    idPlaceOfIssue: string;
    occupation: string;
    permanentAddressLine1: string;
    permanentAddressLine2: string;
    permanentAddressLine3: string;
    permanentAddressLine4: string;
    permanentCity: string;
    permanentState: string;
    permanentZipCode: string;
    permanentCountry:string;
    currentAddressLine1: string;
    currentAddressLine2: string;
    currentAddressLine3: string;
    currentAddressLine4: string;
    currentCity: string;
    currentState: string;
    currentZipCode: string;
    currentCountry: string;
    creator: string;
    created: string;
    updator: string;
    updated: string;
    idType:string;
    nationalId: string;
    accountType:string;
    accountSummery:string;
    notes:string;
    tempAccountNr:string;
    note:string;
    productType:string;
    maritalStatus: string;
    position:string;
    branch:string;
    nationality:string;
    username:string;
    purpose:string;
    additional_account:string;
    applicationRefNr:string;

    constructor(bag?: CurrentAccountBag) {
        if (bag) {
            bag.id ? this.id = bag.id : bag;
            bag.cif ? this.cif=bag.cif:bag;
            bag.suggestion ? this.suggestion = bag.suggestion : bag;
            bag.selection ? this.selection = bag.selection : bag;
            bag.primary ? this.primary = bag.primary : bag;
            bag.placeOfBirth ? this.placeOfBirth =bag.placeOfBirth: bag;
            bag.dateOfBirth ? this.dateOfBirth = new Date(bag.dateOfBirth).toISOString() :bag;
            bag.idDateOfIssue ? this.idDateOfIssue = new Date(bag.idDateOfIssue).toISOString() : bag;
            bag.idPlaceOfIssue ? this.idPlaceOfIssue = bag.idPlaceOfIssue : bag;
            bag.occupation ? this.occupation = bag.occupation : bag;
            bag.permanentAddressLine1 ? this.permanentAddressLine1 = bag.permanentAddressLine1 : bag;
            bag.permanentAddressLine2 ? this.permanentAddressLine2 = bag.permanentAddressLine2 : bag;
            bag.permanentAddressLine3 ? this.permanentAddressLine3 = bag.permanentAddressLine3 : bag;
            bag.permanentAddressLine4 ? this.permanentAddressLine4 = bag.permanentAddressLine4 : bag;
            bag.permanentCity ? this.permanentCity = bag.permanentCity : bag;
            bag.permanentState ? this.permanentState = bag.permanentState : bag;
            bag.permanentZipCode ? this.permanentZipCode = bag.permanentZipCode : bag;
            bag.permanentCountry ? this.permanentCountry=bag.permanentCountry:bag;
            bag.creator ? this.creator = bag.creator : bag;
            bag.created ? this.created = bag.created : bag;
            bag.updator ? this.updator = bag.updator : bag;
            bag.updated ? this.updated = bag.updated : bag;
            bag.currentAddressLine1 ? this.currentAddressLine1 = bag.currentAddressLine1 : bag;
            bag.currentAddressLine2 ? this.currentAddressLine2 = bag.currentAddressLine2 : bag;
            bag.currentAddressLine3 ? this.currentAddressLine3 = bag.currentAddressLine3 : bag;
            bag.currentAddressLine4 ? this.currentAddressLine4 = bag.currentAddressLine4 : bag;
            bag.currentCity ? this.currentCity = bag.currentCity : bag;
            bag.currentState ? this.currentState = bag.currentState : bag;
            bag.currentZipCode ? this.currentZipCode = bag.currentZipCode : bag;
            bag.currentCountry ? this.currentCountry = bag.currentCountry : bag;
            bag.idType ? this.idType = bag.idType : bag;
            bag.nationalId ? this.nationalId = bag.nationalId : bag;
            bag.accountType ? this.accountType = bag.accountType : bag;
            bag.notes ? this.notes= bag.notes :bag;
            bag.tempAccountNr ? this.tempAccountNr= bag.tempAccountNr:bag;
            bag.note ? this.note= bag.note:bag;
            bag.productType ? this.productType = bag.productType:bag;
            bag.maritalStatus ? this.maritalStatus=bag.maritalStatus:bag;
            bag.position ? this.position =bag.position:bag;
            bag.branch ? this.branch=bag.branch:bag;
            bag.nationality ? this.nationality=bag.nationality:bag;
            bag.username ? this.username=bag.username:bag;
            bag.purpose ? this.purpose=bag.purpose:bag;
            bag.additional_account? this.additional_account=bag.additional_account:bag;
            bag.applicationRefNr? this.applicationRefNr=bag.applicationRefNr:bag;
            bag.accountSummery? this.accountSummery=bag.accountSummery:bag;
        }
    }
}
